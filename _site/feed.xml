<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Home Page</title>
		<description>Home Page</description>
		<link>/</link>
		<atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>New Job</title>
				<description>&lt;p&gt;不知不觉新工作过去6周（一个半月了），也该总结总结了。&lt;/p&gt;

&lt;p&gt;有什么好说的呢，当初接受这个offer的时候是考虑到跟我一起工作的内容不太一样，而且这样看下来也的确不一样。以前都是外包的项目，项目不怎么紧急，是瀑布式开发，有什么事情都是问印度人。而这边的工作呢，是做产品的，用的是敏捷开发，但是也是要跟以色列人联系，永远是第二梯队。这样也好没有什么压力。&lt;/p&gt;

&lt;p&gt;再说说工具什么的，以前用的都是比较简单的东西。开发ide用的RAD+WebSphere，用dojo+springmvc+mybatis+sqlserver，然后是svn。现在ide用的是intellij+jetty，框架也是springmvc，主要是restful API，application的相互调用，还有guacamole什么的，数据库是PostgreSQL，然后代码管理是git+maven，这些都是没用过的。&lt;/p&gt;

&lt;p&gt;技术方面还好，就是工具什么的不怎么熟悉，看来要一直学习不能掉队啊。&lt;/p&gt;

&lt;p&gt;下面是学到几个经验（教训）：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;git新建branch的时候给所有的module都要新建一个，哪怕没有用到的，至少在本地有，不然换到其他branch再pull的时候就不能兼容了，血的教训啊&lt;/li&gt;
  &lt;li&gt;一个defect没修完就不要pull了，不要轻易的pull&lt;/li&gt;
  &lt;li&gt;maven可以只build一个小模块，再手动替换jar、classes，节省时间&lt;/li&gt;
  &lt;li&gt;更新agm的status，多建task&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;暂时没有了，其实法国小头人挺好的，同事也都挺好，就是都好文静啊。&lt;/p&gt;

&lt;p&gt;最后一句话，不要怕!&lt;/p&gt;
</description>
				<pubDate>Mon, 06 Jul 2015 00:00:00 +0800</pubDate>
				<link>/diary/2015/07/06/new-job.html</link>
				<guid isPermaLink="true">/diary/2015/07/06/new-job.html</guid>
			</item>
		
			<item>
				<title>Git add ssh key to push</title>
				<description>&lt;p&gt;change git from https to ssh&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;git remote rm origin&lt;/li&gt;
  &lt;li&gt;git remote add origin git@github.com:yourname/demo.git&lt;/li&gt;
  &lt;li&gt;git push origin&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;then generate a ssh key&lt;/p&gt;

&lt;p&gt;```
ssh-keygen -t rsa -b 4096 -C “your_email@example.com”&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;and then push code if it show that you don’t have permisson,&lt;/p&gt;

&lt;p&gt;```
Permission denied (publickey).
fatal: Could not read from remote repository.&lt;/p&gt;

&lt;p&gt;Please make sure you have the correct access rights
and the repository exists.
````&lt;/p&gt;

&lt;p&gt;then add ssh key for git&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
ssh-add ~/.ssh/id_rsa
&lt;/code&gt;&lt;/p&gt;

</description>
				<pubDate>Mon, 06 Jul 2015 00:00:00 +0800</pubDate>
				<link>/diary/2015/07/06/git-ssh-key.html</link>
				<guid isPermaLink="true">/diary/2015/07/06/git-ssh-key.html</guid>
			</item>
		
			<item>
				<title>Financial Foundations</title>
				<description>&lt;ol&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;introduction-to-marketing&quot;&gt;Introduction to Marketing&lt;/h1&gt;
    &lt;p&gt;MODULE ONE: Branding
Core concepts include brand communications and repositioning, marketing strategy, brand positioning, and customer decision-making.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;MODULE TWO: Customer Centricity
Core concepts include establishing competitive advantage through customer centricity, the vocabulary of customer centricity and customer relationship management (CRM).&lt;/p&gt;

&lt;p&gt;MODULE THREE: Go to Market Strategies
Core concepts include omni-channel strategy and online-offline interaction, social targeting, social advertising and persuasion.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;introduction-to-financial-accounting&quot;&gt;Introduction to Financial Accounting&lt;/h1&gt;
    &lt;p&gt;Key topics include:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Introduction and Balance Sheet
Accrual Accounting and the Income Statement
Cash flows and Working capital assets
How to read an Annual Report and Final Exam&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;introduction-to-operations-management&quot;&gt;Introduction to Operations Management&lt;/h1&gt;
    &lt;p&gt;Key topics include:
Process analysis
Productivity
Responsiveness
Quality and Product variety&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h1 id=&quot;introduction-to-corporate-finance&quot;&gt;Introduction to Corporate Finance&lt;/h1&gt;
    &lt;p&gt;Key concepts include:
Calculating present values
Valuation of bonds and stocks
Net Present Value
Measuring risk
Capital budgeting
Capital asset pricing models&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
				<pubDate>Thu, 23 Apr 2015 00:00:00 +0800</pubDate>
				<link>/financial/2015/04/23/financial-foundations.html</link>
				<guid isPermaLink="true">/financial/2015/04/23/financial-foundations.html</guid>
			</item>
		
			<item>
				<title>Programming Cloud Services for Android Handheld Systems Week 3</title>
				<description>&lt;ol&gt;
  &lt;li&gt;Java Annotation
@indentifier
by compiler&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;HTTP to Object Marshalling&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Intro to JSON&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;The Spring Dispatcher Servlet and Controller Abstraction 
using spring framework to dispatcher servlet: extract parameter from request, validation,construct object with params&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Spring Controllers
tell the dispatcher servlet 
@Controller
 public class ContactsCtrl{
 @RequestMapping(“/contacts”)
 public Contacts getContacts(){
     //retrieve contacts&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; return C;  }  @RequestMapping(&quot;/friends&quot;)  public Contacts friends(){  }  } 
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;need to connect to the request
use @annotation&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Accepting Client Data with RequestParam Annotations
@Controller
public class ContactsCtrl{
 @RequestMapping(“/path”)
 public Contacts search(
 //http request paramters with key search
     @RequestParam(“search”) String searchString,
     //convert flag to int
     @RequestParam(“flag”) int searchFlag){&lt;/p&gt;

    &lt;p&gt;}&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Accepting ClientData with PathVarialbe Annotations
rest architecture
// /search/ab
//look into the path, things after the /search/ is a variable named string
@RequestMapping(“/search/{string}”)
public Contacts search(
 @PathVar(“string”) String searchStr,
 @RequestParam(“flag”) int flag){
 return;
}&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Accepting Client Data with Request Body Annotaions &amp;amp; JSON&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;public class Search{
	private String first;
	private String last;
}
@RequestMapping(“search”)
public Contacts search(
	//take all the params to convert to a seach body, HTTP message convert
	@RequestBody Search s){&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Handling Multipart Data
public Class VideoSvc{
 public boolean uploadVideo(
     @RequestParam(“data”) MultipartFile videoData){&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; InputStream in = VideoData.getInputStream();
 //save to desk
 //save to database
&lt;/code&gt;&lt;/pre&gt;

    &lt;p&gt;}
}
//add a new bean to accept multipart data
public Class Application{
 @Bean
 public MultipartConfigElement getMultipartConfig(){
     MultipartConfigFactory f = …
     f.setMaxFileSize(2000);
     f.setMaxRequestSize();
     return f.createMultipartConfig();
 }
}&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Generating Responses with the ResponseBody Annotation
//return the response body to json
public @ResponseBody contact search(){
//find contact&lt;/p&gt;

    &lt;p&gt;return contact;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Custom Marshlling with Jackson Annotations&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;public Video createVideo(video){
	//from json 
	//Jackson ObjectMaper
	//to json
}
@JsonIgnore&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Spring Boot &amp;amp; Application structure&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Spring Controller Code Walkthrough&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
				<pubDate>Fri, 05 Sep 2014 00:00:00 +0800</pubDate>
				<link>/learningnote/2014/09/05/mobilecloud-03.html</link>
				<guid isPermaLink="true">/learningnote/2014/09/05/mobilecloud-03.html</guid>
			</item>
		
			<item>
				<title>Programming Cloud Services for Android Handheld Systems Week 2</title>
				<description>&lt;ol&gt;
  &lt;li&gt;Building Cloud Services on HTTP
 use http request(query parameter) to send command to
    &lt;ol&gt;
      &lt;li&gt;PUT - store new video&lt;/li&gt;
      &lt;li&gt;GET - query/fetch video
 http response(response code - status, body - data(vido, just text), content type)
 put video(name, content type in header) in mutil-part body&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Protocol Layering &amp;amp; HTTP Design Methodologies
  web services on top of http
  rest api&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;REST
  get video/1/deration&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;HTTP Polling
 start with client
  client decide 
  web socket&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Push Messaging 
  GCM service&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Java Servlet
 web.xml to routing request&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;HttpServlet&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Request Routing and Web.xml&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Video Servlet Walkthrough
 lots of Servlet
 doGet(){
     resp.setHeader();
     resp.setContextType(“text/plain”);
 }
 doPost(){
     //get values from the client
     String name = req.getParameter(“name”);
     //validate duration
     //set content type
     //validate parameters
     //tell client bad request
     //tell client successful processed
 }&lt;/p&gt;

    &lt;p&gt;loop each video 
 video are stored in the java object
 anyone can pertend to be your client and send you data, you need to check the data&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Securely Handling Client Data &amp;amp; Avoid Injectiong Attacks&lt;/p&gt;

    &lt;p&gt;client send some data, because of that data can be a command, we execute that command.&lt;/p&gt;

    &lt;p&gt;Don’t trust client data.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
				<pubDate>Mon, 01 Sep 2014 00:00:00 +0800</pubDate>
				<link>/learningnote/2014/09/01/mobilecloud-02.html</link>
				<guid isPermaLink="true">/learningnote/2014/09/01/mobilecloud-02.html</guid>
			</item>
		
			<item>
				<title>Notes For Mobile Cloud</title>
				<description>&lt;h2 id=&quot;week1&quot;&gt;Week1&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Introduction to the mobile cloud&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What are communication Protocols
 how to commucate:
 syntax (format of messages)
 semantics (meaning of message)
 timing (how long wait/process next)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Intro to HTTP&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Why HTTP&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is a Cloud Service&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;HTTP Request Methods&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;HTTP Request Anatomy&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;URLs &amp;amp; Query Parameters&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;URL format: http://host:por/pat&amp;amp;parameter1=2
URL Encoding: If you pass special charaters in the url, it will automaticlly encoding.
9. Mime Types &amp;amp; Content Type Headers&lt;/p&gt;

&lt;p&gt;Both client and server can send Body
Images have different format, like jpg, png
pure text or html format
how to interpret these formats
MIME Types: (Describing the http body)
image/jpg
image/png
text/plain
text/html
either in a request or response, client and server will decide how to interpret these data
meta information
Content-type(header)
describe the mime type
10. Request Body Encoding&lt;/p&gt;

&lt;p&gt;How to send data to server
mime type in body:
url encoded form data (simple key value)
multipart (uploading data)
applicaiton/json
11. HTTP Response Anatomy&lt;/p&gt;

&lt;p&gt;Satus line
	1. response code (what happened on server)
	2. headers:
		content-type(MIME)
	3. body:
		actual data&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;HTTP Response Codes&lt;/p&gt;

    &lt;p&gt;100-500
1XX: info
2XX: success
    200: OK
3XX: redirection
4XX: client error
    404: not found
5XX: server error
    500: server error&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Cookies
logged in
same client 
small piece file server send to client to save 
client add these to request header&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
				<pubDate>Thu, 21 Aug 2014 00:00:00 +0800</pubDate>
				<link>/learningnote/2014/08/21/mobilecloud-01.html</link>
				<guid isPermaLink="true">/learningnote/2014/08/21/mobilecloud-01.html</guid>
			</item>
		
			<item>
				<title>How Time Flies</title>
				<description>&lt;p&gt;It has been 40 days since my parents visit us in Shanghai. In the past 40 day, I didn’t need cook and do my garocy and lundry. I acted like I was the host of the house, and they were the guests.&lt;/p&gt;

&lt;p&gt;But I don’t think we had a very good time during these day. My sister and I always complain about mom’s cooking and unclean, complaining about dad’s doing nothing but watching tv and serf the internet. Mom complaining how the dress me and my sister, and Dad complaining how we should work harder.&lt;/p&gt;

&lt;p&gt;I don’t why we are all complaining each other, and I don’t think it is a good way to live together. We(Me and my sister) are not hoping they will come to visit next year, but they keep insist that they will come next year.&lt;/p&gt;

&lt;p&gt;How should I say about this situation, maybe we should think about each other on these shoes. They only have this summer holiday to visit, they cooked and paied money for us, but instead of welcoming them, we are complaining.&lt;/p&gt;

&lt;p&gt;I don’t know how to make them to think positive, but at lease I should think positive, and next year need to behave better and more polite. They are our parents and we should respect them.&lt;/p&gt;
</description>
				<pubDate>Thu, 21 Aug 2014 00:00:00 +0800</pubDate>
				<link>/english/2014/08/21/how-time-flies.html</link>
				<guid isPermaLink="true">/english/2014/08/21/how-time-flies.html</guid>
			</item>
		
			<item>
				<title>2014072601Wait Wait Don't tell me</title>
				<description>&lt;p&gt;&lt;a href=&quot;http://www.npr.org/2014/07/26/335400964/good-news&quot;&gt;Good News&lt;/a&gt;
&lt;code&gt;
Copyright © 2014 NPR. For personal, noncommercial use only. See Terms of Use. For other uses, prior permission required.
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;BILL KURTIS, BYLINE: From NPR and WBEZ Chicago, this is WAIT WAIT …DON’T TELL ME, the NPR News quiz. I’m carnivorous anchorman Bill Kurtis.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
carnivorous - Carnivorous can be used, especially humorously, to describe someone who eats meat. 
anchorman - The anchorman on a television or radio programme, especially a news programme, is the person who presents it.
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;KURTIS: And here’s your host, at the Nourse Theater in San Francisco, Peter Sagal.&lt;/p&gt;

&lt;p&gt;PETER SAGAL, HOST:&lt;/p&gt;

&lt;p&gt;Thank you.&lt;/p&gt;

&lt;p&gt;SAGAL: Thank you, Bill. Seriously, I thought you guys were mellow. What is this?&lt;/p&gt;

&lt;p&gt;&lt;code&gt;A mellow sound or flavour is pleasant, smooth, and rich.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;SAGAL: This is our second week here in San Francisco. And I am pleased to announce that our show has been bought by Google.&lt;/p&gt;

&lt;p&gt;SAGAL: Now, don’t worry. Our show will be the same. But once the deal goes through, after every question, we have to pause - one minute in silence to let you Google the answer.&lt;/p&gt;

&lt;p&gt;KURTIS: And don’t even think about Bing.&lt;/p&gt;

&lt;p&gt;SAGAL: Today, though, you’re going to have to do it the old-fashioned way. Give us a call at 1-888-WAIT-WAIT. That’s 1-888-924-8924. It’s time to welcome our first listener contestant. Hi, you’re on WAIT WAIT …DON’T TELL ME.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;A contestant in a competition or game show is a person who takes part in it.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;LIZ KANTER-GROSCAN: Hi.&lt;/p&gt;

&lt;p&gt;SAGAL: Hi, who’s this?&lt;/p&gt;

&lt;p&gt;KANTER-GROSCAN: Liz Kanter-Groscan (ph) from Tucson&lt;code&gt;tu:&#39;sɔn&lt;/code&gt;, Arizona.&lt;/p&gt;

&lt;p&gt;SAGAL: Hey, Liz Kanter-Groscan. How are you?&lt;/p&gt;

&lt;p&gt;KANTER-GROSCAN: I’m well, thanks. And you?&lt;/p&gt;

&lt;p&gt;SAGAL: I’m fine. So Liz Kanter-Groscan, one of those great, you know, old, Mexican names, I guess.&lt;/p&gt;

&lt;p&gt;SAGAL: From Tucson.&lt;/p&gt;

&lt;p&gt;KANTER-GROSCAN: Yes, exactly - native.&lt;/p&gt;

&lt;p&gt;SAGAL: Native. Now, where are you from?&lt;/p&gt;

&lt;p&gt;KANTER-GROSCAN: Detroit&lt;code&gt;di&#39;trɔit&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;SAGAL: Detroit.&lt;/p&gt;

&lt;p&gt;(APPLAUSE)&lt;/p&gt;

&lt;p&gt;SAGAL: What brought you to Tucson?&lt;/p&gt;

&lt;p&gt;KANTER-GROSCAN: Life change.&lt;/p&gt;

&lt;p&gt;SAGAL: A life change is the kind that doesn’t involve surgery, right? That’s the…&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Surgery is medical treatment in which someone&#39;s body is cut open so that a doctor can repair, remove, or replace a diseased or damaged part.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;KANTER-GROSCAN: No.&lt;/p&gt;

&lt;p&gt;SAGAL: No. OK, good.&lt;/p&gt;

&lt;p&gt;LUKE BURBANK: Life change is kind of the conversational yellow light, Peter.&lt;/p&gt;

&lt;p&gt;SAGAL: Really?&lt;/p&gt;

&lt;p&gt;BURBANK: Proceed with caution.&lt;/p&gt;

&lt;p&gt;SAGAL: I understand.&lt;/p&gt;

&lt;p&gt;KANTER-GROSCAN: (Laughing) No, no, really.&lt;/p&gt;

&lt;p&gt;SAGAL: Liz, let me introduce you to our panel. First up, the host of the public radio variety show “Live Wire.” It’s Mr. Luke Burbank.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;A panel is a small group of people who are chosen to do something, for example, to discuss something in public or to make a decision.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;BURBANK: Hey, Liz.&lt;/p&gt;

&lt;p&gt;SAGAL: Next, the woman behind the syndicated advice column Ask Amy. It’s Amy Dickinson.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;A syndicate is an association of people or organizations that is formed for business purposes or in order to carry out a project.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;AMY DICKINSON: Hi, Liz.&lt;/p&gt;

&lt;p&gt;KANTER-GROSCAN: Hi, Amy.&lt;/p&gt;

&lt;p&gt;DICKINSON: Hi, Liz.&lt;/p&gt;

&lt;p&gt;SAGAL: And lastly, host of the Morning AMP on vocalo.org and a comedian hosting The Moth at Martyrs’ in Chicago on July 29th. It’s Brian Babylon.&lt;/p&gt;

&lt;p&gt;BRIAN BABYLON: Hey, Liz. How are you?&lt;/p&gt;

&lt;p&gt;KANTER-GROSCAN: I’m doing great. How are you?&lt;/p&gt;

&lt;p&gt;BABYLON: I’m doing great.&lt;/p&gt;

&lt;p&gt;KANTER-GROSCAN: Wow.&lt;/p&gt;

&lt;p&gt;SAGAL: Now, Liz, welcome to the show. I probably don’t need to tell anybody this, but this week has been full of pretty bad news. So we thought this week, for a change, we’d start by digging up some good news deep beyond the headlines. So Bill Kurtis is going to provide some dramatic interpretations of good news that you may not have heard this week. Your job - figure out what it is. Ready to play?&lt;/p&gt;

&lt;p&gt;&lt;code&gt;An interpretation of something is an opinion about what it means.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;KANTER-GROSCAN: I am.&lt;/p&gt;

&lt;p&gt;SAGAL: All right. Your first piece of good news comes from the automotive world. Bill?&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Automotive is used to refer to things relating to cars.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;KURTIS: If you don’t pipe down back there, I’m going to pull over, kick you out, and leave you in the median to be raised by squirrels.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
If liquid or gas is piped somewhere, it is transferred from one place to another through a pipe
The median value of a set of values is the middle one when they are arranged in order. For example, if a group of five students take a test and their scores are 5, 7, 7, 8, and 10, the median score is 7.
A squirrel is a small animal with a long furry tail. Squirrels live mainly in trees. 松鼠
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;SAGAL: Bill was dramatizing a feature of the new Toyota Sienna minivan that will help people everywhere more effectively do what?&lt;/p&gt;

&lt;p&gt;&lt;code&gt;If a book or story is dramatized, it is written or presented as a play, film, or television drama.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;KANTER-GROSCAN: Eject their kids from the car?&lt;/p&gt;

&lt;p&gt;&lt;code&gt;If you eject someone from a place, you force them to leave.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;SAGAL: I hope Toyota is listening ‘cause that is a great idea.&lt;/p&gt;

&lt;p&gt;SAGAL: You’ve got the automated doors already. All you need is some springs, and you’re done. No, no.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
A spring is a spiral of wire which returns to its original shape after it is pressed or pulled.
A spiral is a shape which winds around and around, with each curve above or outside the previous one.
A curve is a smooth, gradually bending line, for example, part of the edge of a circle. 
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;KANTER-GROSCAN: Wow, OK.&lt;/p&gt;

&lt;p&gt;SAGAL: This is slightly less extreme. For you, the driver, is saves vocal strain&lt;code&gt;/streɪn/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;If strain is put on an organization or system, it has to do more than it is able to do.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;KANTER-GROSCAN: No - microphone, intercom.&lt;/p&gt;

&lt;p&gt;SAGAL: Yes. Yes.&lt;/p&gt;

&lt;p&gt;SAGAL: It is a new speaker system…&lt;/p&gt;

&lt;p&gt;SAGAL: …That helps you yell at your kids. You’ve got the system that Toyota calls Driver Easy Speak. They say the built-in microphone that’s connected to the rear speakers in the van is there to help drivers more easily speak to passengers without turning around. But you know that 80 percent of the conversations will be no, we are not there yet.&lt;/p&gt;

&lt;p&gt;SAGAL: Now, all they need is a mechanized arm so you can threaten to smack them too without taking your hands off the wheel.&lt;/p&gt;

&lt;p&gt;BABYLON: What happened to the good old days when there your dad would pull his own finger and lock the windows? That’s how he would, you know, have you stop cutting up.&lt;/p&gt;

&lt;p&gt;BURBANK: So here’s the thing, though. We apparently have an obesity epidemic in this country.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
&lt;/code&gt;
SAGAL: Yes.&lt;/p&gt;

&lt;p&gt;BURBANK: And yet, turning around and yelling at their kids is how most dads get their only exercise during the week.&lt;/p&gt;

&lt;p&gt;BURBANK: So we’re getting rid of that one thing.&lt;/p&gt;

&lt;p&gt;SAGAL: That’s why the right side of their neck is so much more muscular than the left side. Honda - this is true - has a new, built-in vacuum cleaner so you can just, you know, suck up all those old Cheerios.&lt;/p&gt;

&lt;p&gt;BABYLON: Can I say something about that?&lt;/p&gt;

&lt;p&gt;SAGAL: You may.&lt;/p&gt;

&lt;p&gt;BABYLON: I have married friends with kids, and their cars are so filthy. It’s like half of M&amp;amp;Ms and, like, you know, perforated edges of paper and, like, a sock. Ain’t nobody got time for that.&lt;/p&gt;

&lt;p&gt;SAGAL: Not the kids, Brian.&lt;/p&gt;

&lt;p&gt;DICKINSON: Oh, Brian is like that. See, he’s like that single guy you hate, you know? He comes, his clothes are all pressed.&lt;/p&gt;

&lt;p&gt;BABYLON: (Laughing) No.&lt;/p&gt;

&lt;p&gt;DICKINSON: He got a good night’s sleep, you know. We hate you.&lt;/p&gt;

&lt;p&gt;BURBANK: That van, if you describe - it has a built-in cleaning system. It has a microphone. It has the DVD players. It’s so much nicer than your house at some point, right.&lt;/p&gt;

&lt;p&gt;SAGAL: Yeah.&lt;/p&gt;

&lt;p&gt;BURBANK: You’re never leaving the van. You are voluntarily becoming homeless at some point.&lt;/p&gt;

&lt;p&gt;SAGAL: OK, Liz, for your next bit of this week’s good news, please listen to Bill.&lt;/p&gt;

&lt;p&gt;KURTIS: Like, you know, umm, yeah.&lt;/p&gt;

&lt;p&gt;SAGAL: According to a new study, the people who talk that way - with lots of, you know, uhh, you know, like - well, those people actually what?&lt;/p&gt;

&lt;p&gt;KANTER-GROSCAN: Lying.&lt;/p&gt;

&lt;p&gt;SAGAL: No.&lt;/p&gt;

&lt;p&gt;SAGAL: They may well be, but that’s not what the study says.&lt;/p&gt;

&lt;p&gt;SAGAL: What’s that Lassie? Do you know the answer?&lt;/p&gt;

&lt;p&gt;KURTIS: That’s a lifeline.&lt;/p&gt;

&lt;p&gt;SAGAL: Trying to tell you.&lt;/p&gt;

&lt;p&gt;DICKINSON: Timmy’s in the well.&lt;/p&gt;

&lt;p&gt;BURBANK: The answer’s down a well.&lt;/p&gt;

&lt;p&gt;KANTER-GROSCAN: They have meaning - they help you gather your thoughts.&lt;/p&gt;

&lt;p&gt;SAGAL: Exactly&lt;/p&gt;

&lt;p&gt;KANTER-GROSCAN: No.&lt;/p&gt;

&lt;p&gt;SAGAL: That’s exactly right. In fact, the people who say those things are smarter.&lt;/p&gt;

&lt;p&gt;SAGAL: That’s the answer.&lt;/p&gt;

&lt;p&gt;DICKINSON: Whoa.&lt;/p&gt;

&lt;p&gt;SAGAL: And you found the reason. The idea is - and this is according to a new study from the University of Texas. It’s called - and this is true - “Um… Who, Like, Says ‘You know.’” And it suggests people who use those words are actually - it’s not that they’re too dumb to think of real words to say. They’re taking extra time to think about what they say. NPR has been editing it’s broadcasts to make our talent sound smarter ‘cause that’s what we thought we needed to do. We no longer have to thanks to this study. So here, for the first time, is NPR unedited. Ladies and gentlemen, Robert Siegel.&lt;/p&gt;

&lt;p&gt;ROBERT SIEGEL, BYLINE: And finally, the SNP, like, 500 closed on, um, a record high. Reactions were, like, mixed or something. This is NP, like, you know, R.&lt;/p&gt;

&lt;p&gt;BABYLON: See. But no, but see, once you put that this is NPR at the end, it makes everything smarter. You can just do whatever you want to do. Hey, you want to come back to my house? No. This is NPR. OK. I’ll come back to your house.&lt;/p&gt;

&lt;p&gt;BABYLON: It works.&lt;/p&gt;

&lt;p&gt;BURBANK: The problem is as a person who overuses - was, like, in the study?&lt;/p&gt;

&lt;p&gt;SAGAL: Like, yeah. It was in the name of the study, yeah.&lt;/p&gt;

&lt;p&gt;BURBANK: It’s really hard to not - even right now, everything in me wants to use like. And I’m trying not to. Once you start thinking about it, it becomes, like, impossible not to do it.&lt;/p&gt;

&lt;p&gt;SAGAL: I know.&lt;/p&gt;

&lt;p&gt;BABYLON: Hold on. Why wasn’t this true, like, when Valley girls were doing that back in the mid-80s?&lt;/p&gt;

&lt;p&gt;DICKINSON: I know.&lt;/p&gt;

&lt;p&gt;SAGAL: So like…&lt;/p&gt;

&lt;p&gt;BABYLON: That was real popular.&lt;/p&gt;

&lt;p&gt;BURBANK: Moon Zappa was really the Stephen Hawking of her time.&lt;/p&gt;

&lt;p&gt;BABYLON: Yep. Yes she was. Thank you. Thank you, Luke Burbank.&lt;/p&gt;

&lt;p&gt;SAGAL: I believe Moon Unit now runs Hewlett-Packard. So there you go. All right, it’s time for your last bit of good news. Bill.&lt;/p&gt;

&lt;p&gt;KURTIS: I want you to become well acquainted on first name terms with my favorite and most cherished part of my body.&lt;/p&gt;

&lt;p&gt;SAGAL: Bill was quoting from a very popular book that we now know is going to be made into a movie. If you saw the trailer this week, everybody was so excited. What is it?&lt;/p&gt;

&lt;p&gt;KANTER-GROSCAN: “50 Shades Of Grey.”&lt;/p&gt;

&lt;p&gt;SAGAL: “50 Shades Of Grey.”&lt;/p&gt;

&lt;p&gt;SAGAL: The trailer for the bondage-themed movie was premiered to much fanfare - where else but that cesspool of sin “The Today Show.”&lt;/p&gt;

&lt;p&gt;SAGAL: For the occasion, they made it a big deal. They promoted it. Everybody got in on it. Al Roker.&lt;/p&gt;

&lt;p&gt;BABYLON: Gross.&lt;/p&gt;

&lt;p&gt;SAGAL: Al Roker did the weather with a skintight, leather suit and a ball gag.&lt;/p&gt;

&lt;p&gt;DICKINSON: What about Willard Scott?&lt;/p&gt;

&lt;p&gt;SAGAL: Willard Scott was actually - came on and he brought on some 100-year-old people and lightly whipped them.&lt;/p&gt;

&lt;p&gt;SAGAL: People were excited - whatever the quality of the book - that, you know, this new kind of sexual expression has become mainstream. But then you think about it, and you realize as good as that may be, it now means your grandma has a safe word.&lt;/p&gt;

&lt;p&gt;BURBANK: I think this book has scandalized America because, I think, for a lot - a lot of people aren’t doing that kind of stuff. And now, if you’re a suburban house dad, and you…&lt;/p&gt;

&lt;p&gt;BABYLON: Suburban house dads do the most, I’m sorry.&lt;/p&gt;

&lt;p&gt;BURBANK: …And you find that your wife has a copy of this, you can’t believe that that’s a thing that could possibly happen in your life. You’re sort of really excited, and you feel a lot of pressure to build a dungeon.&lt;/p&gt;

&lt;p&gt;DICKINSON: I know a marriage…&lt;/p&gt;

&lt;p&gt;BURBANK: Which is hard to do. First of all, the permitting on a dungeon is terrible.&lt;/p&gt;

&lt;p&gt;DICKINSON: Terrible.&lt;/p&gt;

&lt;p&gt;SAGAL: How did Liz do?&lt;/p&gt;

&lt;p&gt;KURTIS: Liz, good for you.&lt;/p&gt;

&lt;p&gt;SAGAL: Congratulations. Well done, Liz. Thank you so much.&lt;/p&gt;
</description>
				<pubDate>Thu, 31 Jul 2014 00:00:00 +0800</pubDate>
				<link>/english/2014/07/31/wait-wait-don't-tell-me.html</link>
				<guid isPermaLink="true">/english/2014/07/31/wait-wait-don't-tell-me.html</guid>
			</item>
		
			<item>
				<title>Java序列化学习笔记</title>
				<description>&lt;p&gt;First please look into this 
&lt;a href=&quot;http://www.ibm.com/developerworks/library/j-5things1/&quot;&gt;5 things you didn’t know about … Java Object Serialization&lt;/a&gt;
and this &lt;a href=&quot;http://www.importnew.com/10705.html&quot;&gt;怎样对带有不可序列化属性的Java对象进行序列化&lt;/a&gt;
and this &lt;a href=&quot;http://www.blogjava.net/jiangshachina/archive/2012/02/13/369898.html&quot;&gt;理解Java对象序列化&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;影响序列化&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;在现实应用中，有些时候不能使用默认序列化机制。比如，希望在序列化过程中忽略掉敏感数据，或者简化序列化过程。下面将介绍若干影响序列化的方法。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;transient关键字&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;当某个字段被声明为transient后，默认序列化机制就会忽略该字段。此处将Person类中的age字段声明为transient，如下所示，
    ```  &lt;br /&gt;
    public class Person implements Serializable {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        transient private Integer age = null;
        
    }
```   再执行SimpleSerial应用程序，会有如下输出：
```
arg constructor
[John, null, MALE]
```   可见，age字段未被序列化。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;//TODO
深入到序列化方案,eg:Google Protocol Buffer， thrift ， hessian&lt;/p&gt;
</description>
				<pubDate>Tue, 22 Jul 2014 00:00:00 +0800</pubDate>
				<link>/tech/2014/07/22/java-serialization.html</link>
				<guid isPermaLink="true">/tech/2014/07/22/java-serialization.html</guid>
			</item>
		
			<item>
				<title>Java异常学习笔记</title>
				<description>&lt;p&gt;有效处理Java异常三原则&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;具体明确&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;File prefsFile = new File(prefsFilename);&lt;/p&gt;

&lt;p&gt;try{
       readPreferences(prefsFile);
   }
   catch (FileNotFoundException e){
       // alert the user that the specified file
       // does not exist
   }
   catch (EOFException e){
       // alert the user that the end of the file
       // was reached
   }
   catch (ObjectStreamException e){
        // alert the user that the file is corrupted
   }
   catch (IOException e){
       // alert the user that some other I/O
       // error occurred
   }&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;提早抛出&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;```
  public void readPreferences(String filename)
  throws IllegalArgumentException{
      if (filename == null){
           throw new IllegalArgumentException(“filename is null”);
      }  //if&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; //...perform other operations...
   
 InputStream in = new FileInputStream(filename);
   
 //...read the preferences file...   } ```
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
  &lt;li&gt;延迟捕获&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;```
   public void readPreferences(String filename)
   throws IllegalArgumentException,
   FileNotFoundException, IOException{
       if (filename == null){
              throw new IllegalArgumentException(“filename is null”);
        }  //if&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    //...

    InputStream in = new FileInputStream(filename);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;//…
   }
```&lt;/p&gt;

&lt;h1 id=&quot;interview-questionshttpwwwjournaldevcom2167java-exception-interview-questions-and-answers&quot;&gt;&lt;a href=&quot;http://www.journaldev.com/2167/java-exception-interview-questions-and-answers&quot;&gt;Interview Questions&lt;/a&gt;&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;What is Exception in Java?&lt;/p&gt;

    &lt;p&gt;Exception is an error event that can happen during the execution of a program and disrupts it’s normal flow. Exception can arise from different kind of situations such as wrong data entered by user, hardware failure, network connection failure etc.&lt;/p&gt;

    &lt;p&gt;Whenever any error occurs while executing a java statement, an exception object is created and then JRE tries to find exception handler to handle the exception. If suitable exception handler is found then the exception object is passed to the handler code to process the exception, known as catching the exception. If no handler is found then application throws the exception to runtime environment and JRE terminates the program.&lt;/p&gt;

    &lt;p&gt;Java Exception handling framework is used to handle runtime errors only, compile time errors are not handled by exception handling framework.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What are the Exception Handling Keywords in Java?&lt;/p&gt;

    &lt;p&gt;There are four keywords used in java exception handling.&lt;/p&gt;

    &lt;p&gt;throw: Sometimes we explicitly want to create exception object and then throw it to halt the normal processing of the program. throw keyword is used to throw exception to the runtime to handle it.
throws: When we are throwing any checked exception in a method and not handling it, then we need to use throws keyword in method signature to let caller program know the exceptions that might be thrown by the method. The caller method might handle these exceptions or propagate it to it’s caller method using throws keyword. We can provide multiple exceptions in the throws clause and it can be used with main() method also.
try-catch: We use try-catch block for exception handling in our code. try is the start of the block and catch is at the end of try block to handle the exceptions. We can have multiple catch blocks with a try and try-catch block can be nested also. catch block requires a parameter that should be of type Exception.
finally: finally block is optional and can be used only with try-catch block. Since exception halts the process of execution, we might have some resources open that will not get closed, so we can use finally block. finally block gets executed always, whether exception occurrs or not.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Explain Java Exception Hierarchy?&lt;/p&gt;

    &lt;p&gt;Java Exceptions are hierarchical and inheritance is used to categorize different types of exceptions. Throwable is the parent class of Java Exceptions Hierarchy and it has two child objects – Error and Exception. Exceptions are further divided into checked exceptions and runtime exception.&lt;/p&gt;

    &lt;p&gt;Errors are exceptional scenarios that are out of scope of application and it’s not possible to anticipate and recover from them, for example hardware failure, JVM crash or out of memory error.&lt;/p&gt;

    &lt;p&gt;Checked Exceptions are exceptional scenarios that we can anticipate in a program and try to recover from it, for example FileNotFoundException. We should catch this exception and provide useful message to user and log it properly for debugging purpose. Exception is the parent class of all Checked Exceptions.&lt;/p&gt;

    &lt;p&gt;Runtime Exceptions are caused by bad programming, for example trying to retrieve an element from the Array. We should check the length of array first before trying to retrieve the element otherwise it might throw ArrayIndexOutOfBoundException at runtime. RuntimeException is the parent class of all runtime exceptions.&lt;/p&gt;

    &lt;p&gt;exception-hierarchy&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What are important methods of Java Exception Class?&lt;/p&gt;

    &lt;p&gt;Exception and all of it’s subclasses doesn’t provide any specific methods and all of the methods are defined in the base class Throwable.&lt;/p&gt;

    &lt;p&gt;String getMessage() – This method returns the message String of Throwable and the message can be provided while creating the exception through it’s constructor.
String getLocalizedMessage() – This method is provided so that subclasses can override it to provide locale specific message to the calling program. Throwable class implementation of this method simply use getMessage() method to return the exception message.
synchronized Throwable getCause() – This method returns the cause of the exception or null id the cause is unknown.
String toString() – This method returns the information about Throwable in String format, the returned String contains the name of Throwable class and localized message.
void printStackTrace() – This method prints the stack trace information to the standard error stream, this method is overloaded and we can pass PrintStream or PrintWriter as argument to write the stack trace information to the file or stream.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Explain Java 7 ARM Feature and multi-catch block?&lt;/p&gt;

    &lt;p&gt;If you are catching a lot of exceptions in a single try block, you will notice that catch block code looks very ugly and mostly consists of redundant code to log the error, keeping this in mind Java 7 one of the feature was multi-catch block where we can catch multiple exceptions in a single catch block. The catch block with this feature looks like below:&lt;/p&gt;

    &lt;p&gt;&lt;code&gt;
catch(IOException | SQLException | Exception ex){
     logger.error(ex);
     throw new MyException(ex.getMessage());
}
&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;Most of the time, we use finally block just to close the resources and sometimes we forget to close them and get runtime exceptions when the resources are exhausted. These exceptions are hard to debug and we might need to look into each place where we are using that type of resource to make sure we are closing it. So java 7 one of the improvement was try-with-resources where we can create a resource in the try statement itself and use it inside the try-catch block. When the execution comes out of try-catch block, runtime environment automatically close these resources. Sample of try-catch block with this improvement is:&lt;/p&gt;

    &lt;p&gt;&lt;code&gt;
try (MyResource mr = new MyResource()) {
            System.out.println(&quot;MyResource created in try-with-resources&quot;);
        } catch (Exception e) {
            e.printStackTrace();
        }
&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;Read more about this at Java 7 ARM.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is difference between Checked and Unchecked Exception in Java?&lt;/p&gt;

    &lt;p&gt;Checked Exceptions should be handled in the code using try-catch block or else main() method should use throws keyword to let JRE know about these exception that might be thrown from the program. Unchecked Exceptions are not required to be handled in the program or to mention them in throws clause.
Exception is the super class of all checked exceptions whereas RuntimeException is the super class of all unchecked exceptions.
Checked exceptions are error scenarios that are not caused by program, for example FileNotFoundException in reading a file that is not present, whereas Unchecked exceptions are mostly caused by poor programming, for example NullPointerException when invoking a method on an object reference without making sure that it’s not null.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is difference between throw and throws keyword in Java?&lt;/p&gt;

    &lt;p&gt;throws keyword is used with method signature to declare the exceptions that the method might throw whereas throw keyword is used to disrupt the flow of program and handing over the exception object to runtime to handle it.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How to write custom exception in Java?&lt;/p&gt;

    &lt;p&gt;We can extend Exception class or any of it’s subclasses to create our custom exception class. The custom exception class can have it’s own variables and methods that we can use to pass error codes or other exception related information to the exception handler.&lt;/p&gt;

    &lt;p&gt;A simple example of custom exception is shown below.&lt;/p&gt;

    &lt;p&gt;MyException.java&lt;/p&gt;

    &lt;p&gt;```
package com.journaldev.exceptions;&lt;/p&gt;

    &lt;p&gt;import java.io.IOException;&lt;/p&gt;

    &lt;p&gt;public class MyException extends IOException {&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;private static final long serialVersionUID = 4664456874499611218L;
    
private String errorCode=&quot;Unknown_Exception&quot;;
    
public MyException(String message, String errorCode){
    super(message);
    this.errorCode=errorCode;
}
    
public String getErrorCode(){
    return this.errorCode;
}
&lt;/code&gt;&lt;/pre&gt;

    &lt;p&gt;}
```&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is OutOfMemoryError in Java?&lt;/p&gt;

    &lt;p&gt;OutOfMemoryError in Java is a subclass of java.lang.VirtualMachineError and it’s thrown by JVM when it ran out of heap memory. We can fix this error by providing more memory to run the java application through java options.&lt;/p&gt;

    &lt;p&gt;$&amp;gt;java MyProgram -Xms1024m -Xmx1024m -XX:PermSize=64M -XX:MaxPermSize=256m&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What are different scenarios causing “Exception in thread main”?&lt;/p&gt;

    &lt;p&gt;Some of the common main thread exception scenarios are:&lt;/p&gt;

    &lt;p&gt;Exception in thread main java.lang.UnsupportedClassVersionError: This exception comes when your java class is compiled from another JDK version and you are trying to run it from another java version.
Exception in thread main java.lang.NoClassDefFoundError: There are two variants of this exception. The first one is where you provide the class full name with .class extension. The second scenario is when Class is not found.
Exception in thread main java.lang.NoSuchMethodError: main: This exception comes when you are trying to run a class that doesn’t have main method.
Exception in thread “main” java.lang.ArithmeticException: Whenever any exception is thrown from main method, it prints the exception is console. The first part explains that exception is thrown from main method, second part prints the exception class name and then after a colon, it prints the exception message.
Read more about these at Java Exception in Thread main.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is difference between final, finally and finalize in Java?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;final and finally are keywords in java whereas finalize is a method.&lt;/p&gt;

&lt;p&gt;final keyword can be used with class variables so that they can’t be reassigned, with class to avoid extending by classes and with methods to avoid overriding by subclasses, finally keyword is used with try-catch block to provide statements that will always gets executed even if some exception arises, usually finally is used to close resources. finalize() method is executed by Garbage Collector before the object is destroyed, it’s great way to make sure all the global resources are closed.&lt;/p&gt;

&lt;p&gt;Out of the three, only finally is related to java exception handling.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;What happens when exception is thrown by main method?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When exception is thrown by main() method, Java Runtime terminates the program and print the exception message and stack trace in system console.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Can we have an empty catch block?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We can have an empty catch block but it’s the example of worst programming. We should never have empty catch block because if the exception is caught by that block, we will have no information about the exception and it wil be a nightmare to debug it. There should be at least a logging statement to log the exception details in console or log files.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Provide some Java Exception Handling Best Practices?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Some of the best practices related to Java Exception Handling are:&lt;/p&gt;

&lt;p&gt;Use Specific Exceptions for ease of debugging.
   Throw Exceptions Early (Fail-Fast) in the program.
   Catch Exceptions late in the program, let the caller handle the exception.
   Use Java 7 ARM feature to make sure resources are closed or use finally block to close them properly.
   Always log exception messages for debugging purposes.
   Use multi-catch block for cleaner close.
   Use custom exceptions to throw single type of exception from your application API.
   Follow naming convention, always end with Exception.
   Document the Exceptions Thrown by a method using @throws in javadoc.
   Exceptions are costly, so throw it only when it makes sense. Else you can catch them and provide null or empty response.
   Read more about them in detail at Java Exception Handling Best Practices.&lt;/p&gt;
</description>
				<pubDate>Tue, 22 Jul 2014 00:00:00 +0800</pubDate>
				<link>/tech/2014/07/22/java-exception.html</link>
				<guid isPermaLink="true">/tech/2014/07/22/java-exception.html</guid>
			</item>
		
	</channel>
</rss>
